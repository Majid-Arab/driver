generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model driver {
  id                   Int      @id @default(autoincrement())
  user_id              Int?
  first_name           String   @db.VarChar(50)
  last_name            String   @db.VarChar(50)
  age                  String   @db.VarChar(50)
  gender               String   @db.VarChar(50)
  dob                  String   @db.VarChar(50)
  brand                String   @db.VarChar(50)
  registrationPlate    String   @db.VarChar(50)
  vehicleModel         String   @db.VarChar(50)
  cnic_front_image_url String   @db.VarChar(50)
  cnic_back_image_url  String   @db.VarChar(50)
  license_image_url    String   @db.VarChar(50)
  profile_image_url    String?
  car_image_url        String?
  car_seats            Int
  rating               Decimal? @db.Decimal(3, 2)
  user                 users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model drivers {
  id                Int      @id @default(autoincrement())
  first_name        String   @db.VarChar(50)
  last_name         String   @db.VarChar(50)
  profile_image_url String?
  car_image_url     String?
  car_seats         Int
  rating            Decimal? @db.Decimal(3, 2)
  rides             rides[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model rides {
  ride_id               Int       @id @default(autoincrement())
  origin_address        String    @db.VarChar(255)
  destination_address   String    @db.VarChar(255)
  origin_latitude       Decimal   @db.Decimal(9, 6)
  origin_longitude      Decimal   @db.Decimal(9, 6)
  destination_latitude  Decimal   @db.Decimal(9, 6)
  destination_longitude Decimal   @db.Decimal(9, 6)
  ride_time             Int
  fare_price            Decimal   @db.Decimal(10, 2)
  payment_status        String    @db.VarChar(20)
  driver_id             Int?
  user_id               String    @db.VarChar(100)
  created_at            DateTime? @default(now()) @db.Timestamp(6)
  drivers               drivers?  @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(100)
  email    String   @unique @db.VarChar(100)
  clerk_id String   @unique @db.VarChar(50)
  driver   driver[]
}
